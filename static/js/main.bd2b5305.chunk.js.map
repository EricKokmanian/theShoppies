{"version":3,"sources":["logo.svg","components/ResultListItem.js","components/ResultList.js","components/NominationListItem.js","components/NominationList.js","App.js","hooks/useMovieSearch.js","reportWebVitals.js","index.js"],"names":["ResultListItem","id","title","release","isNominated","handleOnNominate","className","disabled","onClick","ResultList","list","nominations","listContent","length","map","item","imdbID","Title","Year","movieId","undefined","find","movie","NominationListItem","handleOnRemove","NominationList","nominationListContent","nominationLimit","App","useState","searchString","setSearchString","setNominations","loading","setLoading","result","setResult","searchByTitle","fetch","then","res","json","data","Search","catch","console","log","finally","useMovieSearch","moviesList","loader","src","logo","alt","Layout","Card","sectioned","TextField","type","label","onBlur","value","onChange","e","alert","filter","nomination","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","AppProvider","theme","colorScheme","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd2b5305.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction ResultListItem ({\r\n    id,\r\n    title,\r\n    release,\r\n    isNominated,\r\n    handleOnNominate\r\n}) {\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"Movie-list-item\">\r\n                <label>{title}</label>\r\n                <label>&nbsp;({release})&nbsp;</label>\r\n                <button disabled={isNominated} onClick={() => {handleOnNominate(id)}}>Nominate</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ResultListItem;","import React from 'react';\r\nimport ResultListItem from './ResultListItem';\r\nimport '../App.css';\r\n\r\nfunction ResultList ({\r\n    list,\r\n    nominations,\r\n    handleOnNominate\r\n}) {\r\n\r\n    function checkIfNominated (movieId) {\r\n        if (nominations.length > 0) \r\n            return nominations.find(movie => movie.imdbID === movieId) !== undefined;\r\n        else\r\n            return false;\r\n    };\r\n\r\n    const listContent = list?.length > 0 ? \r\n        list.map(item => \r\n            <ResultListItem\r\n                key={item.imdbID}\r\n                id={item.imdbID}\r\n                title={item.Title} \r\n                release={item.Year}\r\n                isNominated={checkIfNominated(item.imdbID)}\r\n                handleOnNominate={() => handleOnNominate(item.imdbID)} />\r\n        ) : null\r\n    ;\r\n\r\n    return (\r\n        <ul>\r\n            {listContent}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ResultList;","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction NominationListItem({\r\n    id,\r\n    title,\r\n    release,\r\n    handleOnRemove\r\n}) {\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"Nomination-list-item\">\r\n            <label>{title}</label>\r\n            <label>&nbsp;({release})&nbsp;</label>\r\n            <button onClick={() => handleOnRemove(id)}>Remove</button>\r\n        </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default NominationListItem;","import React from 'react';\r\nimport NominationListItem from './NominationListItem';\r\nimport '../App.css';\r\n\r\nexport default function NominationList ({\r\n    nominations,\r\n    handleOnRemove\r\n}) {\r\n\r\n    const nominationListContent = nominations?.length > 0 ? \r\n        nominations?.map(item => \r\n            <NominationListItem\r\n                key={item.imdbID}\r\n                id={item.imdbID}\r\n                title={item.Title} \r\n                release={item.Year} \r\n                isNominated={item.isNominated}\r\n                handleOnRemove={() => handleOnRemove(item.imdbID)}/>\r\n        ) : null\r\n    ;\r\n\r\n    const nominationLimit = nominations?.length === 5 ?\r\n            <i className=\"Limit-reached\">Maximum number of nominations (5) has been reached!</i> : null\r\n    ;\r\n    \r\n    return (\r\n        <>\r\n            {nominationLimit}\r\n            <ul>\r\n                {nominationListContent}\r\n            </ul>\r\n        </>\r\n    );\r\n}","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TextField, Card, Layout} from '@shopify/polaris';\n\nimport ResultList from './components/ResultList';\nimport useMovieSearch from './hooks/useMovieSearch';\nimport NominationList from './components/NominationList';\n\nexport default function App () {\n  const [searchString, setSearchString] = useState(\"\");\n  const [nominations, setNominations] = useState([]);\n  const {\n    loading, \n    searchByTitle,\n    result: moviesList,\n  } = useMovieSearch(searchString);\n\n  const loader = loading ? \n    <p>Loading.....</p> \n    :  null\n  ;\n\n  function handleOnRemove (movieId) {\n    setNominations(\n      nominations.filter(nomination => nomination.imdbID !== movieId)\n    );\n  };\n\n  function handleOnNominate (movieId) {\n    if (nominations.length < 5)\n      setNominations(nominations => [...nominations, moviesList.find(movie => movie.imdbID === movieId)]);\n    else\n      alert('Sorry, reached the maximum number of nominations !');\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The Shoppies\n        </p>\n      </header>\n        {loader}\n      <Layout>\n        <Card className=\"Movie-search-bar\" sectioned>\n          <TextField \n            type=\"text\"\n            label=\"Search movies by title:\"\n            className=\"Search-box\" \n            onBlur={() => searchByTitle(searchString)}\n            value={searchString} \n            onChange={e => setSearchString(e)}></TextField>\n        </Card>\n      </Layout>\n     \n      <div className=\"Result-movie-list\">\n        <div className=\"Movie-list\">\n          {moviesList?.length > 0 ? \n          <>\n            <h3>Results for \n              <i> '{searchString}' </i>:\n            </h3>\n            <ResultList list={moviesList} nominations={nominations} handleOnNominate={handleOnNominate}/>\n          </> : <h3>No results yet. Start by searching a movie title...</h3>}\n        </div>\n        <div className=\"Nomination-list\">\n          <h3>Nominations</h3><br/><br/>\n          {nominations.length > 0 ? \n            <NominationList nominations={nominations} handleOnRemove={handleOnRemove}/> \n            : <i>No nominations so far...</i>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useState} from 'react';\r\n\r\nexport default function useMovieSearch() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState([]);\r\n\r\n  function searchByTitle(searchString) {\r\n    setLoading(true);\r\n\r\n    fetch('https://www.omdbapi.com/?s=' + searchString + '&apikey=a8600b0b')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        setResult(data.Search);\r\n      })\r\n      // TODO: Handle Errors\r\n      .catch(console.log)\r\n      .finally(() => setLoading(false)) \r\n  }\r\n\r\n  return {\r\n    result,\r\n    loading,\r\n    searchByTitle,\r\n  } \r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from '@shopify/polaris';\n\nReactDOM.render(\n  <AppProvider theme={{colorScheme: \"light\"}}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AppProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}